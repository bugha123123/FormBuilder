@using FormBuilder.Enums
@model FormBuilder.Models.FormTemplate

@{
    ViewData["Title"] = "Fill Out Form";
}

<h1 class="text-3xl font-bold text-gray-800 mb-4 max-w-4xl mx-auto px-6 mt-10">@Model.Title</h1>
<p class="text-gray-600 mb-6 max-w-4xl mx-auto px-6">@Model.Description</p>

<div class="max-w-6xl mx-auto px-6 py-10 bg-white shadow-lg rounded-lg mt-6 flex gap-10">
    <!-- Left side: Form -->
    <div class="flex-1">
        <form asp-action="Create" asp-controller="Form" method="post">
            <input type="hidden" name="TemplateId" value="@Model.Id" />
            @for (int i = 0; i < Model.Questions.Count; i++)
            {
                var question = Model.Questions[i];
                <div class="mb-6">
                    <label class="block text-gray-700 font-semibold mb-2">@question.Text</label>

                    @switch (question.Type)
                    {
                        case QuestionType.ShortText:
                            <input name="Answers[@i].Response" type="text" class="w-full border border-gray-300 rounded px-4 py-2 focus:ring focus:ring-blue-200" />
                            break;

                        case QuestionType.LongText:
                            <textarea name="Answers[@i].Response" rows="4" class="w-full border border-gray-300 rounded px-4 py-2 focus:ring focus:ring-blue-200"></textarea>
                            break;

                        case QuestionType.Number:
                            <input name="Answers[@i].Response" type="number" class="w-full border border-gray-300 rounded px-4 py-2 focus:ring focus:ring-blue-200" />
                            break;

                        case QuestionType.Checkbox:
                            foreach (var option in question.Options)
                            {
                                <div class="flex items-center mb-2">
                                    <input type="checkbox" name="Answers[@i].Response" value="@option" class="mr-2 border-gray-300 rounded" />
                                    <label class="text-gray-700">@option</label>
                                </div>
                            }
                            break;

                        case QuestionType.Dropdown:
                            <select name="Answers[@i].Response" class="w-full border border-gray-300 rounded px-4 py-2">
                                @foreach (var option in question.Options)
                                {
                                    <option value="@option">@option</option>
                                }
                            </select>
                            break;

                        case QuestionType.OneFromList:
                            foreach (var option in question.Options)
                            {
                                <div class="flex items-center mb-2">
                                    <input type="radio" name="Answers[@i].Response" value="@option" class="mr-2 border-gray-300" />
                                    <label class="text-gray-700">@option</label>
                                </div>
                            }
                            break;
                    }

                    <input type="hidden" name="Answers[@i].QuestionId" value="@question.Id" />
                </div>
            }

            <button type="submit" class="bg-blue-600 text-white px-6 py-3 rounded-md hover:bg-blue-700 transition">
                Submit
            </button>
        </form>
    </div>

    <!-- Right side: Comments + Tags stacked vertically -->
    <div class="w-96 flex flex-col gap-8">
        <!-- Comments Section -->
        <div class="bg-gray-100 rounded-lg shadow-inner p-6 max-h-[400px] overflow-y-auto">
            @if (Model.Comments != null && Model.Comments.Any())
            {
                <h3 class="text-xl font-semibold mb-4 text-gray-700">Comments (@Model.Comments.Count)</h3>
                <ul class="space-y-4">
                    @foreach (var comment in Model.Comments.OrderByDescending(c => c.PostedAt))
                    {
                        <li class="bg-white p-4 rounded shadow">
                            <div class="flex justify-between mb-2 text-sm text-gray-500">
                                <span>@comment.UserName</span>
                                <span>@comment.PostedAt.ToString("g")</span>
                            </div>
                            <p class="text-gray-800">@comment.Text</p>
                        </li>
                    }
                </ul>
            }
            else
            {
                <p class="text-center text-gray-500 mt-2">No comments yet — be the first to comment!</p>
            }
        </div>

        <!-- Tags Section -->
        <div class="bg-gray-100 rounded-lg shadow-inner p-6 max-h-[200px] overflow-y-auto">
            <h3 class="text-xl font-semibold mb-4 text-gray-700">Tags (@Model.SavedTags?.Count)</h3>
            @if (Model.SavedTags != null && Model.SavedTags.Any())
            {
                <div class="flex flex-wrap gap-2">
                    @foreach (var tag in Model.SavedTags)
                    {
                        <span class="bg-blue-200 text-blue-800 px-3 py-1 rounded-full text-sm font-medium">@tag</span>
                    }
                </div>
            }
            else
            {
                <p class="text-gray-500 text-center">No tags available.</p>
            }
        </div>
    </div>
</div>

<!-- Add comment form below full width -->
<section class="max-w-4xl mx-auto px-6 py-6 bg-white rounded-lg shadow mt-10">
    <h4 class="text-lg font-semibold mb-3 text-gray-700">Add a Comment</h4>
    <form asp-action="AddComment" asp-controller="Form" method="post" class="space-y-4">
        <input type="hidden" name="TemplateId" value="@Model.Id" />
        <textarea name="NewCommentText" rows="4" required
                  class="w-full border border-gray-300 rounded px-3 py-2 focus:outline-none focus:ring focus:ring-blue-300"
                  placeholder="Write your comment here..."></textarea>
        <button type="submit"
                class="bg-blue-600 text-white px-5 py-2 rounded hover:bg-blue-700 transition">
            Post Comment
        </button>
    </form>
</section>
