@using FormBuilder.DTO
@using FormBuilder.Enums
@using FormBuilder.Interface
@using FormBuilder.Models
@model Form
@inject IFormService _formService;

@{
    ViewData["Title"] = "Edit Form Response";
    var TemplateId = Context.Request.Query["templateId"];
    var FormId = Context.Request.Query["FormId"];
}



<div class="max-w-6xl mx-auto px-4 py-8">
    <div class="text-center mb-8">
        <h1 class="text-3xl font-bold text-gray-900 mb-3">Edit: @Model.Template.Title</h1>
        <p class="text-gray-600 max-w-2xl mx-auto">@Model.Template.Description</p>
    </div>

    <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
        <div class="lg:col-span-2">
            <div class="bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden">
                <div class="p-6 sm:p-8">
                    <form asp-action="Edit" asp-controller="Forms" method="post">
                        <input type="hidden" name="templateId" value="@TemplateId" />
                        <input type="hidden" name="FormId" value="@FormId" />

                        @for (int i = 0; i < Model.Template.Questions.Count; i++)
                        {
                            var question = Model.Template.Questions[i];
                            var answer = Model.Answers.FirstOrDefault(a => a.QuestionId == question.Id);
                            <div class="mb-8 last:mb-6">
                                <label class="block text-gray-800 font-medium mb-2">@question.Text</label>

                                @switch (question.Type)
                                {
                                    case QuestionType.ShortText:
                                        <input name="Answers[@i].Response[]" type="text" value="@answer?.Response?"
                                               class="w-full border border-gray-200 rounded-lg px-4 py-3 bg-gray-50 focus:bg-white focus:outline-none focus:ring-2 focus:ring-purple-500"  />
                                        break;

                                    case QuestionType.LongText:
                                        <textarea name="Answers[@i].Response[]" rows="4"
                                                  class="w-full border border-gray-200 rounded-lg px-4 py-3 bg-gray-50 focus:bg-white focus:outline-none focus:ring-2 focus:ring-purple-500">@answer?.Response?</textarea>
                                        break;

                                    case QuestionType.Number:
                                        <input name="Answers[@i].Response[]" type="number" value="@answer?.Response"
                                               class="w-full border border-gray-200 rounded-lg px-4 py-3 bg-gray-50 focus:bg-white focus:outline-none focus:ring-2 focus:ring-purple-500" />
                                        break;

                                    case QuestionType.Checkbox:
                                        <div class="space-y-2 mt-2">
                                            @foreach (var option in question.Options)
                                            {
                                                var isChecked = answer?.Response?.Contains(option) == true ? "checked" : "";
                                                <div class="flex items-center">
                                                    <input type="checkbox" name="Answers[@i].Response" value="@option" id="checkbox-@i-@option.GetHashCode()" @isChecked
                                                           class="w-5 h-5 text-purple-600 rounded border-gray-300 focus:ring-purple-500" />
                                                    <label for="checkbox-@i-@option.GetHashCode()" class="ml-3 text-gray-700">@option</label>
                                                </div>
                                            }
                                        </div>
                                        break;

                                    case QuestionType.Dropdown:
                                        <div class="relative">
                                            <select name="Answers[@i].Response"
                                                    class="appearance-none w-full border border-gray-200 rounded-lg px-4 py-3 bg-gray-50 focus:bg-white focus:outline-none focus:ring-2 focus:ring-purple-500 pr-10">
                                                @foreach (var option in question.Options)
                                                {
                                                    var selectedValue = answer?.Response;
                                                    var isSelected = selectedValue.ToString() == option ? "selected" : "";
                                                    <option value="@option" isSelected>@option</option>
                                                }
                                            </select>
                                        </div>
                                        break;

                                    case QuestionType.OneFromList:
                                        <div class="space-y-2 mt-2">
                                            @foreach (var option in question.Options)
                                            {
                                                var selectedValue = answer?.Response;
                                                var isChecked = selectedValue.ToString() == option ? "checked" : "";
                                                var radioId = $"radio-{i}-{option.GetHashCode()}";
                                                <div class="flex items-center">
                                                    <input type="radio" name="Answers[@i].Response" value="@option" id="@radioId" @isChecked
                                                           class="w-5 h-5 text-purple-600 border-gray-300 focus:ring-purple-500" />
                                                    <label for="@radioId" class="ml-3 text-gray-700">@option</label>
                                                </div>
                                            }
                                        </div>
                                        break;
                                }

                                <input type="hidden" name="Answers[@i].QuestionId" value="@question.Id" />
                            </div>
                        }

                        <div class="mt-8">
                            <button type="submit" class="w-full sm:w-auto px-6 py-3 bg-purple-600 text-white font-medium rounded-lg hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-purple-500">
                                Save Changes
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
