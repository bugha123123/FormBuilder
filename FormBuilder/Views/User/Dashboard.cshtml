@using FormBuilder.Interface
@using FormBuilder.Models
@inject ITemplateService _templateService
@inject IFormService _formService

@{
    var UserTemplates = await _templateService.GetUserTemplates() ?? new List<FormTemplate>();
    var Forms = await _formService.GetFormsForUser() ?? new List<Form>();
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>User Dashboard</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet" />
</head>
<body class="bg-gray-50 min-h-screen">

    <!-- Header -->
    <header class="bg-white shadow-sm border-b border-gray-200">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex justify-between items-center py-6">
                <h1 class="text-3xl font-bold text-gray-900">Dashboard</h1>
                <div class="flex items-center space-x-4">
                    <span class="text-sm text-gray-500">Welcome back, @User.Identity.Name?.Substring(0, Math.Min(7, User.Identity.Name.Length))</span>
                    <div class="w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center">
                        <span class="text-white text-sm font-medium">
                            @User.Identity.Name?.Substring(0, 2).ToUpper()
                        </span>
                    </div>
                </div>
            </div>
        </div>
    </header>

    <!-- Main Content -->
    <main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">

        @if (TempData["Message"] != null)
        {
            <div class="alert alert-success mb-4 p-4 bg-green-100 text-green-800 rounded">@TempData["Message"]</div>
        }
        @if (TempData["Error"] != null)
        {
            <div class="alert alert-danger mb-4 p-4 bg-red-100 text-red-800 rounded">@TempData["Error"]</div>
        }

        <p class="mb-6 text-gray-700">Use the <strong>Salesforce</strong> button at the bottom-right to connect, sync, or disconnect.</p>

        <!-- Tabs -->
        <div class="mb-8 border-b border-gray-200">
            <nav class="flex space-x-8" aria-label="Tabs">
                <button id="templates-tab" class="tab-button active py-2 px-1 border-b-2 font-medium text-sm text-blue-600 border-blue-500" onclick="switchTab('templates')">My Templates</button>
                <button id="forms-tab" class="tab-button py-2 px-1 border-b-2 font-medium text-sm text-gray-500 border-transparent hover:text-gray-700 hover:border-gray-300" onclick="switchTab('forms')">My Filled Forms</button>
            </nav>
        </div>

        <!-- Templates Tab -->
        <div id="templates-content" class="tab-content">
            <div class="bg-white shadow-sm rounded-lg overflow-hidden">
                <div class="px-6 py-4 border-b border-gray-200 flex justify-between items-center">
                    <h2 class="text-lg font-medium text-gray-900">My Templates</h2>
                    <a asp-action="Create" asp-controller="Template">
                        <button class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md text-sm font-medium transition">
                            Create New Template
                        </button>
                    </a>
                </div>

                <form method="post" asp-controller="Template" asp-action="DeleteMultiple" onsubmit="return confirm('Delete selected templates?');">
                    <!-- Toolbar -->
                    <div class="px-6 py-4 border-t border-gray-200 flex justify-between items-center bg-gray-50">
                        <button type="submit" class="bg-red-600 hover:bg-red-700 text-white px-3 py-1 rounded text-sm">Delete Selected</button>
                    </div>

                    <div class="overflow-x-auto">
                        <table class="min-w-full divide-y divide-gray-200" id="templates-table">
                            <thead class="bg-gray-50">
                                <tr>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Template Name</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Tags</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Created</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Select</th>
                                </tr>
                            </thead>
                            <tbody class="bg-white divide-y divide-gray-200">
                                @if (UserTemplates.Any())
                                {
                                    foreach (var userTemplate in UserTemplates)
                                    {
                                        <tr class="hover:bg-gray-50 cursor-pointer" onclick="window.location.href='@Url.Action("Details", "Template", new { id = userTemplate.Id })'">
                                            <td class="px-6 py-4 whitespace-nowrap">
                                                <div class="text-sm font-medium text-blue-700 hover:underline">@userTemplate.Title</div>
                                                <div class="text-sm text-gray-500">@Html.Raw(userTemplate.Description)</div>
                                            </td>
                                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                                <div class="flex flex-wrap gap-1">
                                                    @foreach (var tag in userTemplate.SavedTags ?? new List<string>())
                                                    {
                                                        <span class="bg-gray-100 text-gray-800 text-xs font-semibold px-2 py-0.5 rounded">@tag</span>
                                                    }
                                                </div>
                                            </td>
                                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">@userTemplate.CreatedAt.ToString("yyyy-MM-dd")</td>
                                            <td class="px-6 py-4 whitespace-nowrap" onclick="event.stopPropagation();">
                                                <input type="checkbox" name="templateIds" class="template-checkbox" value="@userTemplate.Id" />
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="4" class="text-center text-gray-500 px-6 py-4">No templates available.</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </form>
            </div>
        </div>

        <!-- Forms Tab -->
        <div id="forms-content" class="tab-content hidden">
            <div class="bg-white shadow-sm rounded-lg overflow-hidden">

                <form method="post" asp-controller="Forms" asp-action="DeleteMultipleForms" onsubmit="return confirm('Delete selected forms?');">
                    <!-- Toolbar -->
                    <div class="px-6 py-4 border-t border-gray-200 flex justify-between items-center bg-gray-50">
                        <button type="submit" class="bg-red-600 hover:bg-red-700 text-white px-3 py-1 rounded text-sm">Delete Selected</button>
                    </div>

                    <div class="overflow-x-auto">
                        <table class="min-w-full divide-y divide-gray-200" id="forms-table">
                            <thead class="bg-gray-50">
                                <tr>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Form Title</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Template Used</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Submitted</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Select</th>
                                </tr>
                            </thead>
                            <tbody class="bg-white divide-y divide-gray-200">
                                @if (Forms.Any())
                                {
                                    foreach (var item in Forms)
                                    {
                                        if (item.Template != null)
                                        {
                                            <tr class="hover:bg-gray-50 cursor-pointer" onclick="window.location.href='@Url.Action("Details", "Forms", new { formId = item.Id })'">
                                                <td class="px-6 py-4 whitespace-nowrap">
                                                    <div class="text-sm font-medium text-blue-700 hover:underline">@item.Template.Title</div>
                                                    <div class="text-sm text-gray-500">@item.Template.Description</div>
                                                </td>
                                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">@item.Template.Title</td>
                                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">@item.SubmittedAt.ToString("yyyy-MM-dd")</td>
                                                <td class="px-6 py-4 whitespace-nowrap" onclick="event.stopPropagation();">
                                                    <input type="checkbox" name="formIds" class="form-checkbox" value="@item.Id" />
                                                </td>
                                            </tr>
                                        }
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="4" class="text-center text-gray-500 px-6 py-4">No forms found.</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </form>
            </div>
        </div>

    </main>

    <!-- Salesforce Modal -->
    <div id="salesforceModal" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50">
        <div class="bg-white rounded-md shadow-lg max-w-lg w-full p-6 relative">
            <button onclick="closeSalesforceModal()" class="absolute top-3 right-3 text-gray-600 hover:text-gray-900 text-xl font-bold">&times;</button>

            <h2 class="text-xl font-semibold mb-4">Salesforce Integration</h2>

            @if (Context.Session.GetString("SalesforceAccessToken") == null)
            {
                <a href="/Salesforce/Login" class="inline-block bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md">
                    Connect to Salesforce
                </a>
            }
            else
            {
                <form asp-action="Sync" asp-controller="User" method="post" class="space-y-4">
                    <div>
                        <label class="block font-medium mb-1">Company Name <span class="text-red-600">*</span></label>
                        <input type="text" name="companyName" class="w-full border border-gray-300 rounded-md p-2" required />
                    </div>
                    <div>
                        <label class="block font-medium mb-1">Phone Number</label>
                        <input type="text" name="phoneNumber" class="w-full border border-gray-300 rounded-md p-2" />
                    </div>
                    <div>
                        <label class="block font-medium mb-1">Use Case</label>
                        <textarea name="useCase" rows="3" class="w-full border border-gray-300 rounded-md p-2"></textarea>
                    </div>
                    <button type="submit" class="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-md">Sync to Salesforce</button>
                </form>

                <form asp-controller="Salesforce" asp-action="Disconnect" method="post" class="mt-4" onsubmit="return confirm('Are you sure you want to disconnect from Salesforce?');">
                    <button type="submit" class="bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-md">Disconnect</button>
                </form>
            }
        </div>

    </div>

    <!-- Floating Salesforce button -->
    <button onclick="openSalesforceModal()" class="fixed bottom-8 right-8 bg-blue-600 hover:bg-blue-700 text-white px-4 py-3 rounded-full shadow-lg">
        Salesforce
    </button>

    <script>
        function switchTab(tabName) {
            document.querySelectorAll('.tab-content').forEach(el => el.classList.add('hidden'));
            document.getElementById(`${tabName}-content`).classList.remove('hidden');

            document.querySelectorAll('.tab-button').forEach(btn => {
                btn.classList.remove('text-blue-600', 'border-blue-500');
                btn.classList.add('text-gray-500', 'border-transparent');
            });
            const activeTab = document.getElementById(`${tabName}-tab`);
            activeTab.classList.add('text-blue-600', 'border-blue-500');
            activeTab.classList.remove('text-gray-500', 'border-transparent');
        }

        switchTab('templates');

        function openSalesforceModal() {
            document.getElementById('salesforceModal').classList.remove('hidden');
            document.getElementById('salesforceModal').classList.add('flex');
        }
        function closeSalesforceModal() {
            document.getElementById('salesforceModal').classList.add('hidden');
            document.getElementById('salesforceModal').classList.remove('flex');
        }
    </script>

</body>
</html>
